- name: Backend Setup
  hosts: all
  become: yes
  tasks:
    - name: Install Nodejs
      ansible.builtin.dnf:
        name: nodejs
        state: latest

      #dnf install nodejs -y &>>$log_file

    - name: Copy Backend Service file
      ansible.builtin.copy:
          src: backend.service
          dest: /etc/systemd/system/backend.service

      #cp backend.service /etc/systemd/system/backend.service &>>$log_file

    - name: Add Application user
      ansible.builtin.user:
        name: expense


      #useradd expense &>>$log_file

    - name: Cleanup the old content
      ansible.builtin.file:
        path: /app
        state: absent
      #rm -rf /app &>>$log_file

    - name: Create App Directory
      ansible.builtin.file:
        path: /app
        state: directory

      #mkdir /app

    - name: Download frontend code and Extract it
      ansible.builtin.unarchive:
        src: https://expense-artifacts.s3.amazonaws.com/backend.zip
        dest: /app
        remote_src: yes

    - name: Download Dependencies
      ansible.builtin.shell: npm install
      args:
        chdir: /app



    - name: Install MySQL Client
      ansible.builtin.dnf:
        name: mysql
        state: present

    - name: Load Schema
      ansible.builtin.shell: mysql -h 172.31.23.40 -uroot -pExpenseApp@1_root_password < /app/schema/backend.sql

    - name: Starting Backend Service
      ansible.builtin.service:
        name: backend
        state: restart
        enabled: yes
        daemon-reload: yes


#type npm &>>$log_file
#if [ $? -ne 0 ]; then
#echo Install NodeJS Repos
#dnf install nodejs -y &>>$log_file
#stat_check
#fi
#
#echo Copy Backend Service
#cp backend.service /etc/systemd/system/backend.service &>>$log_file
#stat_check
#
#echo Add ApplicatiOn User
#id expense &>>$log_file
#if [ $? -ne 0 ]; then
#useradd expense &>>$log_file
#fi
#stat_check
#
#echo Clear App Content
#rm -rf /app &>>$log_file
#stat_check
#
#mkdir /app
#stat_check
#
#cd /app
#stat_check
#
#download_and_extract &>>$log_file#function is called
#stat_check
#
#echo Download Dependencies
#npm install &>>$log_file
#stat_check
#
#echo Start Backend Service
#systemctl daemon-reload &>>$log_file
#stat_check
#
#systemctl enable backend &>>$log_file
#stat_check
#
#systemctl start backend &>>$log_file
#stat_check
#
#echo Install MySQL Client
#dnf install mysql -y &>>$log_file
#stat_check
#
#echo Load Schema
#mysql_root_password=$1
#mysql -h 172.31.21.0 -uroot -p$mysql_root_password < /app/schema/backend.sql &>>$log_file
#stat_check
#
